import torch

"""
在PyTorch中，gather是一个用于收集（或者说索引）张量中指定索引的元素的函数。它的语法为：
torch.gather(input, dim, index, out=None)
参数说明：
    input：输入张量，形状为(N, *)，其中*表示任意维度。
    dim：指定收集操作应该在哪个维度上进行的整数值。例如，如果dim=0，则表示沿着第一个维度收集。
    index：包含要收集的元素的索引的张量。它的形状必须与input的形状相同，除了指定的dim维度上必须匹配。
    out：可选的输出张量。
gather函数通过使用index张量来获取input张量中指定索引的元素，并将其放置在输出张量中。输出张量的形状与index相同，但是在指定的dim维度上可能会有所改变。
"""
prob = torch.randn(4, 10)
# tensor([[ 2.1541,  0.5697, -0.0654, -0.4048,  1.2820,  1.4873, -0.0041, -0.0442,
#           1.8458, -0.4587],
#         [-0.5628,  0.8048,  1.4114,  0.4353,  1.2098,  0.7892, -0.7564, -0.0354,
#          -0.0799, -0.3643],
#         [ 1.0821, -0.4374,  0.8153, -1.0072,  0.1040, -1.7631,  0.9388, -0.7213,
#          -0.4143,  0.9684],
#         [ 0.5702,  0.9183, -1.7861, -0.0506, -0.1869,  0.2589,  1.1956, -1.3418,
#           0.1604,  0.0957]])
print(prob)
idx = prob.topk(dim=1, k=3)
# torch.return_types.topk(
# values=tensor([[2.1541, 1.8458, 1.4873],
#         [1.4114, 1.2098, 0.8048],
#         [1.0821, 0.9684, 0.9388],
#         [1.1956, 0.9183, 0.5702]]),
# indices=tensor([[0, 8, 5],
#         [2, 4, 1],
#         [0, 9, 6],
#         [6, 1, 0]]))
print(idx)
idx = idx[1]
# tensor([[0, 8, 5],
#         [2, 4, 1],
#         [0, 9, 6],
#         [6, 1, 0]])
print(idx)
label = torch.arange(10) + 100
# tensor([100, 101, 102, 103, 104, 105, 106, 107, 108, 109])
print(label)
b = label.expand(4, 10)
# tensor([[100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
#         [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
#         [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
#         [100, 101, 102, 103, 104, 105, 106, 107, 108, 109]])
print(b)
# tensor([[100, 108, 105],
#         [102, 104, 101],
#         [100, 109, 106],
#         [106, 101, 100]])
print(torch.gather(b, dim=1, index=idx.long()))